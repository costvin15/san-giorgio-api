plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.desafio'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'

	implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1")

	implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.data:spring-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'com.h2database:h2:2.3.232'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:localstack'
	testImplementation 'org.awaitility:awaitility'

	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir("jacoco")
	}
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory  = file("$buildDir/jacoco")
}

jacocoTestCoverageVerification {
	violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['com.desafio.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}
